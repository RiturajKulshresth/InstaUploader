
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path
import subprocess

# Function to execute a Python script
def execute_script(script_name):
    subprocess.run(["python", script_name])

# Execute the first script
def SequentialExecution():
    execute_script("getPhotos.py")
    execute_script("Post.py")
    # Execute the second script
    execute_script("removeConfig.py")

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"./assets")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

window.geometry("600x420")
window.configure(bg = "#FFFFFF")



# Call the function to store entries to a file
# store_entries_to_file()


canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 420,
    width = 600,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    300.0,
    210.0,
    image=image_image_1
)

canvas.create_text(
    0.0,
    16.0,
    anchor="nw",
    text="\nInstaUploader\n\n\nAutomate the Upload of images to your Instagram Account\n\n\nYou need:\nUnsplash API Client ID\nInstagram account\n",
    fill="#FFFFFF",
    font=("Inter SemiBold", 20 * -1)
)

canvas.create_rectangle(
    299.0,
    -1.0,
    300.0,
    434.0,
    fill="#FCF9F9",
    outline="")



entry_image_1 = PhotoImage(
    file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(
    450.5,
    246.0,
    image=entry_image_1
)
entry_1 = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
entry_1.place(
    x=360.0,
    y=232.0,
    width=181.0,
    height=26.0
)

entry_image_2 = PhotoImage(
    file=relative_to_assets("entry_2.png"))
entry_bg_2 = canvas.create_image(
    450.5,
    160.0,
    image=entry_image_2
)
entry_2 = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
entry_2.place(
    x=360.0,
    y=146.0,
    width=181.0,
    height=26.0
)

entry_image_3 = PhotoImage(
    file=relative_to_assets("entry_3.png"))
entry_bg_3 = canvas.create_image(
    450.5,
    79.0,
    image=entry_image_3
)
entry_3 = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
entry_3.place(
    x=333.0,
    y=65.0,
    width=235.0,
    height=26.0
)

def store_entries_to_file():
    # Get the values from entry widgets
    value_1 = entry_1.get()
    value_2 = entry_2.get()
    value_3 = entry_3.get()

    # Define the path to the file
    file_path = OUTPUT_PATH / "Creds.py"

    # Write the values to the file
    with open(file_path, 'w') as file:
        file.write(f"client_id = '{value_3}'\n")
        file.write(f"username = '{value_2}'\n")
        file.write(f"password = '{value_1}'\n")

    print("Entries stored to file successfully.")

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=store_entries_to_file,
    relief="flat"
)
button_1.place(
    x=394.0,
    y=319.0,
    width=114.0,
    height=31.0
)

button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=SequentialExecution,
    relief="flat"
)
button_2.place(
    x=394.0,
    y=343.0,
    width=114.0,
    height=31.0
)

canvas.create_text(
    379.0,
    42.0,
    anchor="nw",
    text="Client ID",
    fill="#FFFFFF",
    font=("Inter Bold", 13 * -1)
)

canvas.create_text(
    379.0,
    123.0,
    anchor="nw",
    text="Username",
    fill="#FFFFFF",
    font=("Inter Bold", 13 * -1)
)

canvas.create_text(
    379.0,
    209.0,
    anchor="nw",
    text="Password",
    fill="#FFFFFF",
    font=("Inter Bold", 13 * -1)
)
window.resizable(False, False)
window.mainloop()
